import { HtmlFactory, SvgFactory } from './types';
export declare const createHtmlProxy: (h: HtmlFactory) => HtmlFactory & {
    a: import("./types").NodeFactory<HTMLAnchorElement>;
    abbr: import("./types").NodeFactory<HTMLElement>;
    address: import("./types").NodeFactory<HTMLElement>;
    area: import("./types").NodeFactory<HTMLAreaElement>;
    article: import("./types").NodeFactory<HTMLElement>;
    aside: import("./types").NodeFactory<HTMLElement>;
    audio: import("./types").NodeFactory<HTMLAudioElement>;
    b: import("./types").NodeFactory<HTMLElement>;
    base: import("./types").NodeFactory<HTMLBaseElement>;
    bdi: import("./types").NodeFactory<HTMLElement>;
    bdo: import("./types").NodeFactory<HTMLElement>;
    blockquote: import("./types").NodeFactory<HTMLQuoteElement>;
    body: import("./types").NodeFactory<HTMLBodyElement>;
    br: import("./types").NodeFactory<HTMLBRElement>;
    button: import("./types").NodeFactory<HTMLButtonElement>;
    canvas: import("./types").NodeFactory<HTMLCanvasElement>;
    caption: import("./types").NodeFactory<HTMLTableCaptionElement>;
    cite: import("./types").NodeFactory<HTMLElement>;
    code: import("./types").NodeFactory<HTMLElement>;
    col: import("./types").NodeFactory<HTMLTableColElement>;
    colgroup: import("./types").NodeFactory<HTMLTableColElement>;
    data: import("./types").NodeFactory<HTMLDataElement>;
    datalist: import("./types").NodeFactory<HTMLDataListElement>;
    dd: import("./types").NodeFactory<HTMLElement>;
    del: import("./types").NodeFactory<HTMLModElement>;
    details: import("./types").NodeFactory<HTMLDetailsElement>;
    dfn: import("./types").NodeFactory<HTMLElement>;
    dialog: import("./types").NodeFactory<HTMLDialogElement>;
    dir: import("./types").NodeFactory<HTMLDirectoryElement>;
    div: import("./types").NodeFactory<HTMLDivElement>;
    dl: import("./types").NodeFactory<HTMLDListElement>;
    dt: import("./types").NodeFactory<HTMLElement>;
    em: import("./types").NodeFactory<HTMLElement>;
    embed: import("./types").NodeFactory<HTMLEmbedElement>;
    fieldset: import("./types").NodeFactory<HTMLFieldSetElement>;
    figcaption: import("./types").NodeFactory<HTMLElement>;
    figure: import("./types").NodeFactory<HTMLElement>;
    font: import("./types").NodeFactory<HTMLFontElement>;
    footer: import("./types").NodeFactory<HTMLElement>;
    form: import("./types").NodeFactory<HTMLFormElement>;
    frame: import("./types").NodeFactory<HTMLFrameElement>;
    frameset: import("./types").NodeFactory<HTMLFrameSetElement>;
    h1: import("./types").NodeFactory<HTMLHeadingElement>;
    h2: import("./types").NodeFactory<HTMLHeadingElement>;
    h3: import("./types").NodeFactory<HTMLHeadingElement>;
    h4: import("./types").NodeFactory<HTMLHeadingElement>;
    h5: import("./types").NodeFactory<HTMLHeadingElement>;
    h6: import("./types").NodeFactory<HTMLHeadingElement>;
    head: import("./types").NodeFactory<HTMLHeadElement>;
    header: import("./types").NodeFactory<HTMLElement>;
    hgroup: import("./types").NodeFactory<HTMLElement>;
    hr: import("./types").NodeFactory<HTMLHRElement>;
    html: import("./types").NodeFactory<HTMLHtmlElement>;
    i: import("./types").NodeFactory<HTMLElement>;
    iframe: import("./types").NodeFactory<HTMLIFrameElement>;
    img: import("./types").NodeFactory<HTMLImageElement>;
    input: import("./types").NodeFactory<HTMLInputElement>;
    ins: import("./types").NodeFactory<HTMLModElement>;
    kbd: import("./types").NodeFactory<HTMLElement>;
    label: import("./types").NodeFactory<HTMLLabelElement>;
    legend: import("./types").NodeFactory<HTMLLegendElement>;
    li: import("./types").NodeFactory<HTMLLIElement>;
    link: import("./types").NodeFactory<HTMLLinkElement>;
    main: import("./types").NodeFactory<HTMLElement>;
    map: import("./types").NodeFactory<HTMLMapElement>;
    mark: import("./types").NodeFactory<HTMLElement>;
    marquee: import("./types").NodeFactory<HTMLMarqueeElement>;
    menu: import("./types").NodeFactory<HTMLMenuElement>;
    meta: import("./types").NodeFactory<HTMLMetaElement>;
    meter: import("./types").NodeFactory<HTMLMeterElement>;
    nav: import("./types").NodeFactory<HTMLElement>;
    noscript: import("./types").NodeFactory<HTMLElement>;
    object: import("./types").NodeFactory<HTMLObjectElement>;
    ol: import("./types").NodeFactory<HTMLOListElement>;
    optgroup: import("./types").NodeFactory<HTMLOptGroupElement>;
    option: import("./types").NodeFactory<HTMLOptionElement>;
    output: import("./types").NodeFactory<HTMLOutputElement>;
    p: import("./types").NodeFactory<HTMLParagraphElement>;
    param: import("./types").NodeFactory<HTMLParamElement>;
    picture: import("./types").NodeFactory<HTMLPictureElement>;
    pre: import("./types").NodeFactory<HTMLPreElement>;
    progress: import("./types").NodeFactory<HTMLProgressElement>;
    q: import("./types").NodeFactory<HTMLQuoteElement>;
    rp: import("./types").NodeFactory<HTMLElement>;
    rt: import("./types").NodeFactory<HTMLElement>;
    ruby: import("./types").NodeFactory<HTMLElement>;
    s: import("./types").NodeFactory<HTMLElement>;
    samp: import("./types").NodeFactory<HTMLElement>;
    script: import("./types").NodeFactory<HTMLScriptElement>;
    section: import("./types").NodeFactory<HTMLElement>;
    select: import("./types").NodeFactory<HTMLSelectElement>;
    slot: import("./types").NodeFactory<HTMLSlotElement>;
    small: import("./types").NodeFactory<HTMLElement>;
    source: import("./types").NodeFactory<HTMLSourceElement>;
    span: import("./types").NodeFactory<HTMLSpanElement>;
    strong: import("./types").NodeFactory<HTMLElement>;
    style: import("./types").NodeFactory<HTMLStyleElement>;
    sub: import("./types").NodeFactory<HTMLElement>;
    summary: import("./types").NodeFactory<HTMLElement>;
    sup: import("./types").NodeFactory<HTMLElement>;
    table: import("./types").NodeFactory<HTMLTableElement>;
    tbody: import("./types").NodeFactory<HTMLTableSectionElement>;
    td: import("./types").NodeFactory<HTMLTableCellElement>;
    template: import("./types").NodeFactory<HTMLTemplateElement>;
    textarea: import("./types").NodeFactory<HTMLTextAreaElement>;
    tfoot: import("./types").NodeFactory<HTMLTableSectionElement>;
    th: import("./types").NodeFactory<HTMLTableCellElement>;
    thead: import("./types").NodeFactory<HTMLTableSectionElement>;
    time: import("./types").NodeFactory<HTMLTimeElement>;
    title: import("./types").NodeFactory<HTMLTitleElement>;
    tr: import("./types").NodeFactory<HTMLTableRowElement>;
    track: import("./types").NodeFactory<HTMLTrackElement>;
    u: import("./types").NodeFactory<HTMLElement>;
    ul: import("./types").NodeFactory<HTMLUListElement>;
    var: import("./types").NodeFactory<HTMLElement>;
    video: import("./types").NodeFactory<HTMLVideoElement>;
    wbr: import("./types").NodeFactory<HTMLElement>;
} & {
    [key: string]: import("./types").NodeFactory<HTMLElement>;
};
export declare const createSvgProxy: (s: SvgFactory) => SvgFactory & {
    a: import("./types").NodeFactory<SVGAElement>;
    animate: import("./types").NodeFactory<SVGAnimateElement>;
    animateMotion: import("./types").NodeFactory<SVGAnimateMotionElement>;
    animateTransform: import("./types").NodeFactory<SVGAnimateTransformElement>;
    circle: import("./types").NodeFactory<SVGCircleElement>;
    clipPath: import("./types").NodeFactory<SVGClipPathElement>;
    defs: import("./types").NodeFactory<SVGDefsElement>;
    desc: import("./types").NodeFactory<SVGDescElement>;
    ellipse: import("./types").NodeFactory<SVGEllipseElement>;
    feBlend: import("./types").NodeFactory<SVGFEBlendElement>;
    feColorMatrix: import("./types").NodeFactory<SVGFEColorMatrixElement>;
    feComponentTransfer: import("./types").NodeFactory<SVGFEComponentTransferElement>;
    feComposite: import("./types").NodeFactory<SVGFECompositeElement>;
    feConvolveMatrix: import("./types").NodeFactory<SVGFEConvolveMatrixElement>;
    feDiffuseLighting: import("./types").NodeFactory<SVGFEDiffuseLightingElement>;
    feDisplacementMap: import("./types").NodeFactory<SVGFEDisplacementMapElement>;
    feDistantLight: import("./types").NodeFactory<SVGFEDistantLightElement>;
    feDropShadow: import("./types").NodeFactory<SVGFEDropShadowElement>;
    feFlood: import("./types").NodeFactory<SVGFEFloodElement>;
    feFuncA: import("./types").NodeFactory<SVGFEFuncAElement>;
    feFuncB: import("./types").NodeFactory<SVGFEFuncBElement>;
    feFuncG: import("./types").NodeFactory<SVGFEFuncGElement>;
    feFuncR: import("./types").NodeFactory<SVGFEFuncRElement>;
    feGaussianBlur: import("./types").NodeFactory<SVGFEGaussianBlurElement>;
    feImage: import("./types").NodeFactory<SVGFEImageElement>;
    feMerge: import("./types").NodeFactory<SVGFEMergeElement>;
    feMergeNode: import("./types").NodeFactory<SVGFEMergeNodeElement>;
    feMorphology: import("./types").NodeFactory<SVGFEMorphologyElement>;
    feOffset: import("./types").NodeFactory<SVGFEOffsetElement>;
    fePointLight: import("./types").NodeFactory<SVGFEPointLightElement>;
    feSpecularLighting: import("./types").NodeFactory<SVGFESpecularLightingElement>;
    feSpotLight: import("./types").NodeFactory<SVGFESpotLightElement>;
    feTile: import("./types").NodeFactory<SVGFETileElement>;
    feTurbulence: import("./types").NodeFactory<SVGFETurbulenceElement>;
    filter: import("./types").NodeFactory<SVGFilterElement>;
    foreignObject: import("./types").NodeFactory<SVGForeignObjectElement>;
    g: import("./types").NodeFactory<SVGGElement>;
    image: import("./types").NodeFactory<SVGImageElement>;
    line: import("./types").NodeFactory<SVGLineElement>;
    linearGradient: import("./types").NodeFactory<SVGLinearGradientElement>;
    marker: import("./types").NodeFactory<SVGMarkerElement>;
    mask: import("./types").NodeFactory<SVGMaskElement>;
    metadata: import("./types").NodeFactory<SVGMetadataElement>;
    mpath: import("./types").NodeFactory<SVGMPathElement>;
    path: import("./types").NodeFactory<SVGPathElement>;
    pattern: import("./types").NodeFactory<SVGPatternElement>;
    polygon: import("./types").NodeFactory<SVGPolygonElement>;
    polyline: import("./types").NodeFactory<SVGPolylineElement>;
    radialGradient: import("./types").NodeFactory<SVGRadialGradientElement>;
    rect: import("./types").NodeFactory<SVGRectElement>;
    script: import("./types").NodeFactory<SVGScriptElement>;
    set: import("./types").NodeFactory<SVGSetElement>;
    stop: import("./types").NodeFactory<SVGStopElement>;
    style: import("./types").NodeFactory<SVGStyleElement>;
    svg: import("./types").NodeFactory<SVGSVGElement>;
    switch: import("./types").NodeFactory<SVGSwitchElement>;
    symbol: import("./types").NodeFactory<SVGSymbolElement>;
    text: import("./types").NodeFactory<SVGTextElement>;
    textPath: import("./types").NodeFactory<SVGTextPathElement>;
    title: import("./types").NodeFactory<SVGTitleElement>;
    tspan: import("./types").NodeFactory<SVGTSpanElement>;
    use: import("./types").NodeFactory<SVGUseElement>;
    view: import("./types").NodeFactory<SVGViewElement>;
} & {
    [key: string]: import("./types").NodeFactory<SVGElement>;
};
