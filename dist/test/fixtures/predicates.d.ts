export declare const htmlElementPredicates: {
    a: (el: any) => el is HTMLAnchorElement;
    abbr: (el: any) => el is HTMLElement;
    address: (el: any) => el is HTMLElement;
    area: (el: any) => el is HTMLAreaElement;
    article: (el: any) => el is HTMLElement;
    aside: (el: any) => el is HTMLElement;
    audio: (el: any) => el is HTMLAudioElement;
    b: (el: any) => el is HTMLElement;
    base: (el: any) => el is HTMLBaseElement;
    bdi: (el: any) => el is HTMLElement;
    bdo: (el: any) => el is HTMLElement;
    blockquote: (el: any) => el is HTMLQuoteElement;
    body: (el: any) => el is HTMLBodyElement;
    br: (el: any) => el is HTMLBRElement;
    button: (el: any) => el is HTMLButtonElement;
    canvas: (el: any) => el is HTMLCanvasElement;
    caption: (el: any) => el is HTMLTableCaptionElement;
    cite: (el: any) => el is HTMLElement;
    code: (el: any) => el is HTMLElement;
    col: (el: any) => el is HTMLTableColElement;
    colgroup: (el: any) => el is HTMLTableColElement;
    data: (el: any) => el is HTMLDataElement;
    datalist: (el: any) => el is HTMLDataListElement;
    dd: (el: any) => el is HTMLElement;
    del: (el: any) => el is HTMLModElement;
    details: (el: any) => el is HTMLDetailsElement;
    dfn: (el: any) => el is HTMLElement;
    dialog: (el: any) => el is HTMLDialogElement;
    div: (el: any) => el is HTMLDivElement;
    dl: (el: any) => el is HTMLDListElement;
    dt: (el: any) => el is HTMLElement;
    em: (el: any) => el is HTMLElement;
    embed: (el: any) => el is HTMLEmbedElement;
    fieldset: (el: any) => el is HTMLFieldSetElement;
    figcaption: (el: any) => el is HTMLElement;
    figure: (el: any) => el is HTMLElement;
    footer: (el: any) => el is HTMLElement;
    form: (el: any) => el is HTMLFormElement;
    h1: (el: any) => el is HTMLHeadingElement;
    h2: (el: any) => el is HTMLHeadingElement;
    h3: (el: any) => el is HTMLHeadingElement;
    h4: (el: any) => el is HTMLHeadingElement;
    h5: (el: any) => el is HTMLHeadingElement;
    h6: (el: any) => el is HTMLHeadingElement;
    head: (el: any) => el is HTMLHeadElement;
    header: (el: any) => el is HTMLElement;
    hgroup: (el: any) => el is HTMLElement;
    hr: (el: any) => el is HTMLHRElement;
    html: (el: any) => el is HTMLHtmlElement;
    i: (el: any) => el is HTMLElement;
    iframe: (el: any) => el is HTMLIFrameElement;
    img: (el: any) => el is HTMLImageElement;
    input: (el: any) => el is HTMLInputElement;
    ins: (el: any) => el is HTMLModElement;
    kbd: (el: any) => el is HTMLElement;
    label: (el: any) => el is HTMLLabelElement;
    legend: (el: any) => el is HTMLLegendElement;
    li: (el: any) => el is HTMLLIElement;
    link: (el: any) => el is HTMLLinkElement;
    main: (el: any) => el is HTMLElement;
    map: (el: any) => el is HTMLMapElement;
    mark: (el: any) => el is HTMLElement;
    menu: (el: any) => el is HTMLMenuElement;
    meta: (el: any) => el is HTMLMetaElement;
    meter: (el: any) => el is HTMLMeterElement;
    nav: (el: any) => el is HTMLElement;
    noscript: (el: any) => el is HTMLElement;
    object: (el: any) => el is HTMLObjectElement;
    ol: (el: any) => el is HTMLOListElement;
    optgroup: (el: any) => el is HTMLOptGroupElement;
    option: (el: any) => el is HTMLOptionElement;
    output: (el: any) => el is HTMLOutputElement;
    p: (el: any) => el is HTMLParagraphElement;
    picture: (el: any) => el is HTMLPictureElement;
    pre: (el: any) => el is HTMLPreElement;
    progress: (el: any) => el is HTMLProgressElement;
    q: (el: any) => el is HTMLQuoteElement;
    rp: (el: any) => el is HTMLElement;
    rt: (el: any) => el is HTMLElement;
    ruby: (el: any) => el is HTMLElement;
    s: (el: any) => el is HTMLElement;
    samp: (el: any) => el is HTMLElement;
    script: (el: any) => el is HTMLScriptElement;
    section: (el: any) => el is HTMLElement;
    select: (el: any) => el is HTMLSelectElement;
    slot: (el: any) => el is HTMLSlotElement;
    small: (el: any) => el is HTMLElement;
    source: (el: any) => el is HTMLSourceElement;
    span: (el: any) => el is HTMLSpanElement;
    strong: (el: any) => el is HTMLElement;
    style: (el: any) => el is HTMLStyleElement;
    sub: (el: any) => el is HTMLElement;
    summary: (el: any) => el is HTMLElement;
    sup: (el: any) => el is HTMLElement;
    table: (el: any) => el is HTMLTableElement;
    tbody: (el: any) => el is HTMLTableSectionElement;
    td: (el: any) => el is HTMLTableCellElement;
    template: (el: any) => el is HTMLTemplateElement;
    textarea: (el: any) => el is HTMLTextAreaElement;
    tfoot: (el: any) => el is HTMLTableSectionElement;
    th: (el: any) => el is HTMLTableCellElement;
    thead: (el: any) => el is HTMLTableSectionElement;
    time: (el: any) => el is HTMLTimeElement;
    title: (el: any) => el is HTMLTitleElement;
    tr: (el: any) => el is HTMLTableRowElement;
    track: (el: any) => el is HTMLTrackElement;
    u: (el: any) => el is HTMLElement;
    ul: (el: any) => el is HTMLUListElement;
    var: (el: any) => el is HTMLElement;
    video: (el: any) => el is HTMLVideoElement;
    wbr: (el: any) => el is HTMLElement;
};
export declare const svgElementPredictes: {
    $a: (el: any) => boolean;
    circle: (el: any) => boolean;
    clipPath: (el: any) => boolean;
    defs: (el: any) => boolean;
    desc: (el: any) => boolean;
    ellipse: (el: any) => boolean;
    feBlend: (el: any) => boolean;
    feColorMatrix: (el: any) => boolean;
    feComponentTransfer: (el: any) => boolean;
    feComposite: (el: any) => boolean;
    feConvolveMatrix: (el: any) => boolean;
    feDiffuseLighting: (el: any) => boolean;
    feDisplacementMap: (el: any) => boolean;
    feDistantLight: (el: any) => boolean;
    feDropShadow: (el: any) => boolean;
    feFlood: (el: any) => boolean;
    feFuncA: (el: any) => boolean;
    feFuncB: (el: any) => boolean;
    feFuncG: (el: any) => boolean;
    feFuncR: (el: any) => boolean;
    feGaussianBlur: (el: any) => boolean;
    feImage: (el: any) => boolean;
    feMerge: (el: any) => boolean;
    feMergeNode: (el: any) => boolean;
    feMorphology: (el: any) => boolean;
    feOffset: (el: any) => boolean;
    fePointLight: (el: any) => boolean;
    feSpecularLighting: (el: any) => boolean;
    feSpotLight: (el: any) => boolean;
    feTile: (el: any) => boolean;
    feTurbulence: (el: any) => boolean;
    filter: (el: any) => boolean;
    foreignObject: (el: any) => boolean;
    g: (el: any) => boolean;
    image: (el: any) => boolean;
    line: (el: any) => boolean;
    linearGradient: (el: any) => boolean;
    marker: (el: any) => boolean;
    mask: (el: any) => boolean;
    metadata: (el: any) => boolean;
    path: (el: any) => boolean;
    pattern: (el: any) => boolean;
    polygon: (el: any) => boolean;
    polyline: (el: any) => boolean;
    radialGradient: (el: any) => boolean;
    rect: (el: any) => boolean;
    stop: (el: any) => boolean;
    svg: (el: any) => boolean;
    $switch: (el: any) => boolean;
    symbol: (el: any) => boolean;
    $text: (el: any) => boolean;
    textPath: (el: any) => boolean;
    tspan: (el: any) => boolean;
    use: (el: any) => boolean;
    view: (el: any) => boolean;
};
