"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.svgElementPredictes = exports.htmlElementPredicates = void 0;
const predicates_1 = require("../../lib/predicates");
exports.htmlElementPredicates = {
    a: (el) => (0, predicates_1.isElement)(el) && el.localName === 'a',
    abbr: (el) => (0, predicates_1.isElement)(el) && el.localName === 'abbr',
    address: (el) => (0, predicates_1.isElement)(el) && el.localName === 'address',
    area: (el) => (0, predicates_1.isElement)(el) && el.localName === 'area',
    article: (el) => (0, predicates_1.isElement)(el) && el.localName === 'article',
    aside: (el) => (0, predicates_1.isElement)(el) && el.localName === 'aside',
    audio: (el) => (0, predicates_1.isElement)(el) && el.localName === 'audio',
    b: (el) => (0, predicates_1.isElement)(el) && el.localName === 'b',
    base: (el) => (0, predicates_1.isElement)(el) && el.localName === 'base',
    bdi: (el) => (0, predicates_1.isElement)(el) && el.localName === 'bdi',
    bdo: (el) => (0, predicates_1.isElement)(el) && el.localName === 'bdo',
    blockquote: (el) => (0, predicates_1.isElement)(el) && el.localName === 'blockquote',
    body: (el) => (0, predicates_1.isElement)(el) && el.localName === 'body',
    br: (el) => (0, predicates_1.isElement)(el) && el.localName === 'br',
    button: (el) => (0, predicates_1.isElement)(el) && el.localName === 'button',
    canvas: (el) => (0, predicates_1.isElement)(el) && el.localName === 'canvas',
    caption: (el) => (0, predicates_1.isElement)(el) && el.localName === 'caption',
    cite: (el) => (0, predicates_1.isElement)(el) && el.localName === 'cite',
    code: (el) => (0, predicates_1.isElement)(el) && el.localName === 'code',
    col: (el) => (0, predicates_1.isElement)(el) && el.localName === 'col',
    colgroup: (el) => (0, predicates_1.isElement)(el) && el.localName === 'colgroup',
    data: (el) => (0, predicates_1.isElement)(el) && el.localName === 'data',
    datalist: (el) => (0, predicates_1.isElement)(el) && el.localName === 'datalist',
    dd: (el) => (0, predicates_1.isElement)(el) && el.localName === 'dd',
    del: (el) => (0, predicates_1.isElement)(el) && el.localName === 'del',
    details: (el) => (0, predicates_1.isElement)(el) && el.localName === 'details',
    dfn: (el) => (0, predicates_1.isElement)(el) && el.localName === 'dfn',
    dialog: (el) => (0, predicates_1.isElement)(el) && el.localName === 'dialog',
    div: (el) => (0, predicates_1.isElement)(el) && el.localName === 'div',
    dl: (el) => (0, predicates_1.isElement)(el) && el.localName === 'dl',
    dt: (el) => (0, predicates_1.isElement)(el) && el.localName === 'dt',
    em: (el) => (0, predicates_1.isElement)(el) && el.localName === 'em',
    embed: (el) => (0, predicates_1.isElement)(el) && el.localName === 'embed',
    fieldset: (el) => (0, predicates_1.isElement)(el) && el.localName === 'fieldset',
    figcaption: (el) => (0, predicates_1.isElement)(el) && el.localName === 'figcaption',
    figure: (el) => (0, predicates_1.isElement)(el) && el.localName === 'figure',
    footer: (el) => (0, predicates_1.isElement)(el) && el.localName === 'footer',
    form: (el) => (0, predicates_1.isElement)(el) && el.localName === 'form',
    h1: (el) => (0, predicates_1.isElement)(el) && el.localName === 'h1',
    h2: (el) => (0, predicates_1.isElement)(el) && el.localName === 'h2',
    h3: (el) => (0, predicates_1.isElement)(el) && el.localName === 'h3',
    h4: (el) => (0, predicates_1.isElement)(el) && el.localName === 'h4',
    h5: (el) => (0, predicates_1.isElement)(el) && el.localName === 'h5',
    h6: (el) => (0, predicates_1.isElement)(el) && el.localName === 'h6',
    head: (el) => (0, predicates_1.isElement)(el) && el.localName === 'head',
    header: (el) => (0, predicates_1.isElement)(el) && el.localName === 'header',
    hgroup: (el) => (0, predicates_1.isElement)(el) && el.localName === 'hgroup',
    hr: (el) => (0, predicates_1.isElement)(el) && el.localName === 'hr',
    html: (el) => (0, predicates_1.isElement)(el) && el.localName === 'html',
    i: (el) => (0, predicates_1.isElement)(el) && el.localName === 'i',
    iframe: (el) => (0, predicates_1.isElement)(el) && el.localName === 'iframe',
    img: (el) => (0, predicates_1.isElement)(el) && el.localName === 'img',
    input: (el) => (0, predicates_1.isElement)(el) && el.localName === 'input',
    ins: (el) => (0, predicates_1.isElement)(el) && el.localName === 'ins',
    kbd: (el) => (0, predicates_1.isElement)(el) && el.localName === 'kbd',
    label: (el) => (0, predicates_1.isElement)(el) && el.localName === 'label',
    legend: (el) => (0, predicates_1.isElement)(el) && el.localName === 'legend',
    li: (el) => (0, predicates_1.isElement)(el) && el.localName === 'li',
    link: (el) => (0, predicates_1.isElement)(el) && el.localName === 'link',
    main: (el) => (0, predicates_1.isElement)(el) && el.localName === 'main',
    map: (el) => (0, predicates_1.isElement)(el) && el.localName === 'map',
    mark: (el) => (0, predicates_1.isElement)(el) && el.localName === 'mark',
    menu: (el) => (0, predicates_1.isElement)(el) && el.localName === 'menu',
    meta: (el) => (0, predicates_1.isElement)(el) && el.localName === 'meta',
    meter: (el) => (0, predicates_1.isElement)(el) && el.localName === 'meter',
    nav: (el) => (0, predicates_1.isElement)(el) && el.localName === 'nav',
    noscript: (el) => (0, predicates_1.isElement)(el) && el.localName === 'noscript',
    object: (el) => (0, predicates_1.isElement)(el) && el.localName === 'object',
    ol: (el) => (0, predicates_1.isElement)(el) && el.localName === 'ol',
    optgroup: (el) => (0, predicates_1.isElement)(el) && el.localName === 'optgroup',
    option: (el) => (0, predicates_1.isElement)(el) && el.localName === 'option',
    output: (el) => (0, predicates_1.isElement)(el) && el.localName === 'output',
    p: (el) => (0, predicates_1.isElement)(el) && el.localName === 'p',
    picture: (el) => (0, predicates_1.isElement)(el) && el.localName === 'picture',
    pre: (el) => (0, predicates_1.isElement)(el) && el.localName === 'pre',
    progress: (el) => (0, predicates_1.isElement)(el) && el.localName === 'progress',
    q: (el) => (0, predicates_1.isElement)(el) && el.localName === 'q',
    rp: (el) => (0, predicates_1.isElement)(el) && el.localName === 'rp',
    rt: (el) => (0, predicates_1.isElement)(el) && el.localName === 'rt',
    ruby: (el) => (0, predicates_1.isElement)(el) && el.localName === 'ruby',
    s: (el) => (0, predicates_1.isElement)(el) && el.localName === 's',
    samp: (el) => (0, predicates_1.isElement)(el) && el.localName === 'samp',
    script: (el) => (0, predicates_1.isElement)(el) && el.localName === 'script',
    section: (el) => (0, predicates_1.isElement)(el) && el.localName === 'section',
    select: (el) => (0, predicates_1.isElement)(el) && el.localName === 'select',
    slot: (el) => (0, predicates_1.isElement)(el) && el.localName === 'slot',
    small: (el) => (0, predicates_1.isElement)(el) && el.localName === 'small',
    source: (el) => (0, predicates_1.isElement)(el) && el.localName === 'source',
    span: (el) => (0, predicates_1.isElement)(el) && el.localName === 'span',
    strong: (el) => (0, predicates_1.isElement)(el) && el.localName === 'strong',
    style: (el) => (0, predicates_1.isElement)(el) && el.localName === 'style',
    sub: (el) => (0, predicates_1.isElement)(el) && el.localName === 'sub',
    summary: (el) => (0, predicates_1.isElement)(el) && el.localName === 'summary',
    sup: (el) => (0, predicates_1.isElement)(el) && el.localName === 'sup',
    table: (el) => (0, predicates_1.isElement)(el) && el.localName === 'table',
    tbody: (el) => (0, predicates_1.isElement)(el) && el.localName === 'tbody',
    td: (el) => (0, predicates_1.isElement)(el) && el.localName === 'td',
    template: (el) => (0, predicates_1.isElement)(el) && el.localName === 'template',
    textarea: (el) => (0, predicates_1.isElement)(el) && el.localName === 'textarea',
    tfoot: (el) => (0, predicates_1.isElement)(el) && el.localName === 'tfoot',
    th: (el) => (0, predicates_1.isElement)(el) && el.localName === 'th',
    thead: (el) => (0, predicates_1.isElement)(el) && el.localName === 'thead',
    time: (el) => (0, predicates_1.isElement)(el) && el.localName === 'time',
    title: (el) => (0, predicates_1.isElement)(el) && el.localName === 'title',
    tr: (el) => (0, predicates_1.isElement)(el) && el.localName === 'tr',
    track: (el) => (0, predicates_1.isElement)(el) && el.localName === 'track',
    u: (el) => (0, predicates_1.isElement)(el) && el.localName === 'u',
    ul: (el) => (0, predicates_1.isElement)(el) && el.localName === 'ul',
    var: (el) => (0, predicates_1.isElement)(el) && el.localName === 'var',
    video: (el) => (0, predicates_1.isElement)(el) && el.localName === 'video',
    wbr: (el) => (0, predicates_1.isElement)(el) && el.localName === 'wbr',
};
exports.svgElementPredictes = {
    $a: (el) => el instanceof SVGAElement && el.localName === 'a',
    circle: (el) => el instanceof SVGCircleElement && el.localName === 'circle',
    clipPath: (el) => el instanceof SVGClipPathElement && el.localName === 'clipPath',
    defs: (el) => el instanceof SVGDefsElement && el.localName === 'defs',
    desc: (el) => el instanceof SVGDescElement && el.localName === 'desc',
    ellipse: (el) => el instanceof SVGEllipseElement && el.localName === 'ellipse',
    feBlend: (el) => el instanceof SVGFEBlendElement && el.localName === 'feBlend',
    feColorMatrix: (el) => el instanceof SVGFEColorMatrixElement && el.localName === 'feColorMatrix',
    feComponentTransfer: (el) => el instanceof SVGFEComponentTransferElement && el.localName === 'feComponentTransfer',
    feComposite: (el) => el instanceof SVGFECompositeElement && el.localName === 'feComposite',
    feConvolveMatrix: (el) => el instanceof SVGFEConvolveMatrixElement && el.localName === 'feConvolveMatrix',
    feDiffuseLighting: (el) => el instanceof SVGFEDiffuseLightingElement && el.localName === 'feDiffuseLighting',
    feDisplacementMap: (el) => el instanceof SVGFEDisplacementMapElement && el.localName === 'feDisplacementMap',
    feDistantLight: (el) => el instanceof SVGFEDistantLightElement && el.localName === 'feDistantLight',
    feDropShadow: (el) => el instanceof SVGFEDropShadowElement && el.localName === 'feDropShadow',
    feFlood: (el) => el instanceof SVGFEFloodElement && el.localName === 'feFlood',
    feFuncA: (el) => el instanceof SVGFEFuncAElement && el.localName === 'feFuncA',
    feFuncB: (el) => el instanceof SVGFEFuncBElement && el.localName === 'feFuncB',
    feFuncG: (el) => el instanceof SVGFEFuncGElement && el.localName === 'feFuncG',
    feFuncR: (el) => el instanceof SVGFEFuncRElement && el.localName === 'feFuncR',
    feGaussianBlur: (el) => el instanceof SVGFEGaussianBlurElement && el.localName === 'feGaussianBlur',
    feImage: (el) => el instanceof SVGFEImageElement && el.localName === 'feImage',
    feMerge: (el) => el instanceof SVGFEMergeElement && el.localName === 'feMerge',
    feMergeNode: (el) => el instanceof SVGFEMergeNodeElement && el.localName === 'feMergeNode',
    feMorphology: (el) => el instanceof SVGFEMorphologyElement && el.localName === 'feMorphology',
    feOffset: (el) => el instanceof SVGFEOffsetElement && el.localName === 'feOffset',
    fePointLight: (el) => el instanceof SVGFEPointLightElement && el.localName === 'fePointLight',
    feSpecularLighting: (el) => el instanceof SVGFESpecularLightingElement && el.localName === 'feSpecularLighting',
    feSpotLight: (el) => el instanceof SVGFESpotLightElement && el.localName === 'feSpotLight',
    feTile: (el) => el instanceof SVGFETileElement && el.localName === 'feTile',
    feTurbulence: (el) => el instanceof SVGFETurbulenceElement && el.localName === 'feTurbulence',
    filter: (el) => el instanceof SVGFilterElement && el.localName === 'filter',
    foreignObject: (el) => el instanceof SVGForeignObjectElement && el.localName === 'foreignObject',
    g: (el) => el instanceof SVGGElement && el.localName === 'g',
    image: (el) => el instanceof SVGImageElement && el.localName === 'image',
    line: (el) => el instanceof SVGLineElement && el.localName === 'line',
    linearGradient: (el) => el instanceof SVGLinearGradientElement && el.localName === 'linearGradient',
    marker: (el) => el instanceof SVGMarkerElement && el.localName === 'marker',
    mask: (el) => el instanceof SVGMaskElement && el.localName === 'mask',
    metadata: (el) => el instanceof SVGMetadataElement && el.localName === 'metadata',
    path: (el) => el instanceof SVGPathElement && el.localName === 'path',
    pattern: (el) => el instanceof SVGPatternElement && el.localName === 'pattern',
    polygon: (el) => el instanceof SVGPolygonElement && el.localName === 'polygon',
    polyline: (el) => el instanceof SVGPolylineElement && el.localName === 'polyline',
    radialGradient: (el) => el instanceof SVGRadialGradientElement && el.localName === 'radialGradient',
    rect: (el) => el instanceof SVGRectElement && el.localName === 'rect',
    stop: (el) => el instanceof SVGStopElement && el.localName === 'stop',
    svg: (el) => el instanceof SVGSVGElement && el.localName === 'svg',
    $switch: (el) => el instanceof SVGSwitchElement && el.localName === 'switch',
    symbol: (el) => el instanceof SVGSymbolElement && el.localName === 'symbol',
    $text: (el) => el instanceof SVGTextElement && el.localName === 'text',
    textPath: (el) => el instanceof SVGTextPathElement && el.localName === 'textPath',
    tspan: (el) => el instanceof SVGTSpanElement && el.localName === 'tspan',
    use: (el) => el instanceof SVGUseElement && el.localName === 'use',
    view: (el) => el instanceof SVGViewElement && el.localName === 'view'
};
//# sourceMappingURL=predicates.js.map