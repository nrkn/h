import { ElArg, HtmlKey } from '../../lib/types';
export declare type Fixture = {
    title: string;
    tag: HtmlKey | string;
    elementChild?: HtmlKey | string;
    map?: (el: HTMLElement, ...args: any[]) => any;
    args: ElArg[];
    expect: string;
};
export declare const baseFixtures: Fixture[];
export declare const htmlHelpers: {
    a: (...args: ElArg[]) => HTMLAnchorElement;
    abbr: (...args: ElArg[]) => HTMLElement;
    address: (...args: ElArg[]) => HTMLElement;
    area: (...args: ElArg[]) => HTMLAreaElement;
    article: (...args: ElArg[]) => HTMLElement;
    aside: (...args: ElArg[]) => HTMLElement;
    audio: (...args: ElArg[]) => HTMLAudioElement;
    b: (...args: ElArg[]) => HTMLElement;
    base: (...args: ElArg[]) => HTMLBaseElement;
    bdi: (...args: ElArg[]) => HTMLElement;
    bdo: (...args: ElArg[]) => HTMLElement;
    blockquote: (...args: ElArg[]) => HTMLQuoteElement;
    body: (...args: ElArg[]) => HTMLBodyElement;
    br: (...args: ElArg[]) => HTMLBRElement;
    button: (...args: ElArg[]) => HTMLButtonElement;
    canvas: (...args: ElArg[]) => HTMLCanvasElement;
    caption: (...args: ElArg[]) => HTMLTableCaptionElement;
    cite: (...args: ElArg[]) => HTMLElement;
    code: (...args: ElArg[]) => HTMLElement;
    col: (...args: ElArg[]) => HTMLTableColElement;
    colgroup: (...args: ElArg[]) => HTMLTableColElement;
    data: (...args: ElArg[]) => HTMLDataElement;
    datalist: (...args: ElArg[]) => HTMLDataListElement;
    dd: (...args: ElArg[]) => HTMLElement;
    del: (...args: ElArg[]) => HTMLModElement;
    details: (...args: ElArg[]) => HTMLDetailsElement;
    dfn: (...args: ElArg[]) => HTMLElement;
    dialog: (...args: ElArg[]) => HTMLDialogElement;
    div: (...args: ElArg[]) => HTMLDivElement;
    dl: (...args: ElArg[]) => HTMLDListElement;
    dt: (...args: ElArg[]) => HTMLElement;
    em: (...args: ElArg[]) => HTMLElement;
    embed: (...args: ElArg[]) => HTMLEmbedElement;
    fieldset: (...args: ElArg[]) => HTMLFieldSetElement;
    figcaption: (...args: ElArg[]) => HTMLElement;
    figure: (...args: ElArg[]) => HTMLElement;
    footer: (...args: ElArg[]) => HTMLElement;
    form: (...args: ElArg[]) => HTMLFormElement;
    h1: (...args: ElArg[]) => HTMLHeadingElement;
    h2: (...args: ElArg[]) => HTMLHeadingElement;
    h3: (...args: ElArg[]) => HTMLHeadingElement;
    h4: (...args: ElArg[]) => HTMLHeadingElement;
    h5: (...args: ElArg[]) => HTMLHeadingElement;
    h6: (...args: ElArg[]) => HTMLHeadingElement;
    head: (...args: ElArg[]) => HTMLHeadElement;
    header: (...args: ElArg[]) => HTMLElement;
    hgroup: (...args: ElArg[]) => HTMLElement;
    hr: (...args: ElArg[]) => HTMLHRElement;
    html: (...args: ElArg[]) => HTMLHtmlElement;
    i: (...args: ElArg[]) => HTMLElement;
    iframe: (...args: ElArg[]) => HTMLIFrameElement;
    img: (...args: ElArg[]) => HTMLImageElement;
    input: (...args: ElArg[]) => HTMLInputElement;
    ins: (...args: ElArg[]) => HTMLModElement;
    kbd: (...args: ElArg[]) => HTMLElement;
    label: (...args: ElArg[]) => HTMLLabelElement;
    legend: (...args: ElArg[]) => HTMLLegendElement;
    li: (...args: ElArg[]) => HTMLLIElement;
    link: (...args: ElArg[]) => HTMLLinkElement;
    main: (...args: ElArg[]) => HTMLElement;
    map: (...args: ElArg[]) => HTMLMapElement;
    mark: (...args: ElArg[]) => HTMLElement;
    menu: (...args: ElArg[]) => HTMLMenuElement;
    meta: (...args: ElArg[]) => HTMLMetaElement;
    meter: (...args: ElArg[]) => HTMLMeterElement;
    nav: (...args: ElArg[]) => HTMLElement;
    noscript: (...args: ElArg[]) => HTMLElement;
    object: (...args: ElArg[]) => HTMLObjectElement;
    ol: (...args: ElArg[]) => HTMLOListElement;
    optgroup: (...args: ElArg[]) => HTMLOptGroupElement;
    option: (...args: ElArg[]) => HTMLOptionElement;
    output: (...args: ElArg[]) => HTMLOutputElement;
    p: (...args: ElArg[]) => HTMLParagraphElement;
    picture: (...args: ElArg[]) => HTMLPictureElement;
    pre: (...args: ElArg[]) => HTMLPreElement;
    progress: (...args: ElArg[]) => HTMLProgressElement;
    q: (...args: ElArg[]) => HTMLQuoteElement;
    rp: (...args: ElArg[]) => HTMLElement;
    rt: (...args: ElArg[]) => HTMLElement;
    ruby: (...args: ElArg[]) => HTMLElement;
    $s: (...args: ElArg[]) => HTMLElement;
    samp: (...args: ElArg[]) => HTMLElement;
    script: (...args: ElArg[]) => HTMLScriptElement;
    section: (...args: ElArg[]) => HTMLElement;
    select: (...args: ElArg[]) => HTMLSelectElement;
    slot: (...args: ElArg[]) => HTMLSlotElement;
    small: (...args: ElArg[]) => HTMLElement;
    source: (...args: ElArg[]) => HTMLSourceElement;
    span: (...args: ElArg[]) => HTMLSpanElement;
    strong: (...args: ElArg[]) => HTMLElement;
    style: (...args: ElArg[]) => HTMLStyleElement;
    sub: (...args: ElArg[]) => HTMLElement;
    summary: (...args: ElArg[]) => HTMLElement;
    sup: (...args: ElArg[]) => HTMLElement;
    table: (...args: ElArg[]) => HTMLTableElement;
    tbody: (...args: ElArg[]) => HTMLTableSectionElement;
    td: (...args: ElArg[]) => HTMLTableCellElement;
    template: (...args: ElArg[]) => HTMLTemplateElement;
    textarea: (...args: ElArg[]) => HTMLTextAreaElement;
    tfoot: (...args: ElArg[]) => HTMLTableSectionElement;
    th: (...args: ElArg[]) => HTMLTableCellElement;
    thead: (...args: ElArg[]) => HTMLTableSectionElement;
    time: (...args: ElArg[]) => HTMLTimeElement;
    title: (...args: ElArg[]) => HTMLTitleElement;
    tr: (...args: ElArg[]) => HTMLTableRowElement;
    track: (...args: ElArg[]) => HTMLTrackElement;
    u: (...args: ElArg[]) => HTMLElement;
    ul: (...args: ElArg[]) => HTMLUListElement;
    $var: (...args: ElArg[]) => HTMLElement;
    video: (...args: ElArg[]) => HTMLVideoElement;
    wbr: (...args: ElArg[]) => HTMLElement;
};
export declare const svgHelpers: {
    $a: (...args: ElArg[]) => SVGAElement;
    circle: (...args: ElArg[]) => SVGCircleElement;
    clipPath: (...args: ElArg[]) => SVGClipPathElement;
    defs: (...args: ElArg[]) => SVGDefsElement;
    desc: (...args: ElArg[]) => SVGDescElement;
    ellipse: (...args: ElArg[]) => SVGEllipseElement;
    feBlend: (...args: ElArg[]) => SVGFEBlendElement;
    feColorMatrix: (...args: ElArg[]) => SVGFEColorMatrixElement;
    feComponentTransfer: (...args: ElArg[]) => SVGFEComponentTransferElement;
    feComposite: (...args: ElArg[]) => SVGFECompositeElement;
    feConvolveMatrix: (...args: ElArg[]) => SVGFEConvolveMatrixElement;
    feDiffuseLighting: (...args: ElArg[]) => SVGFEDiffuseLightingElement;
    feDisplacementMap: (...args: ElArg[]) => SVGFEDisplacementMapElement;
    feDistantLight: (...args: ElArg[]) => SVGFEDistantLightElement;
    feDropShadow: (...args: ElArg[]) => SVGFEDropShadowElement;
    feFlood: (...args: ElArg[]) => SVGFEFloodElement;
    feFuncA: (...args: ElArg[]) => SVGFEFuncAElement;
    feFuncB: (...args: ElArg[]) => SVGFEFuncBElement;
    feFuncG: (...args: ElArg[]) => SVGFEFuncGElement;
    feFuncR: (...args: ElArg[]) => SVGFEFuncRElement;
    feGaussianBlur: (...args: ElArg[]) => SVGFEGaussianBlurElement;
    feImage: (...args: ElArg[]) => SVGFEImageElement;
    feMerge: (...args: ElArg[]) => SVGFEMergeElement;
    feMergeNode: (...args: ElArg[]) => SVGFEMergeNodeElement;
    feMorphology: (...args: ElArg[]) => SVGFEMorphologyElement;
    feOffset: (...args: ElArg[]) => SVGFEOffsetElement;
    fePointLight: (...args: ElArg[]) => SVGFEPointLightElement;
    feSpecularLighting: (...args: ElArg[]) => SVGFESpecularLightingElement;
    feSpotLight: (...args: ElArg[]) => SVGFESpotLightElement;
    feTile: (...args: ElArg[]) => SVGFETileElement;
    feTurbulence: (...args: ElArg[]) => SVGFETurbulenceElement;
    filter: (...args: ElArg[]) => SVGFilterElement;
    foreignObject: (...args: ElArg[]) => SVGForeignObjectElement;
    g: (...args: ElArg[]) => SVGGElement;
    image: (...args: ElArg[]) => SVGImageElement;
    line: (...args: ElArg[]) => SVGLineElement;
    linearGradient: (...args: ElArg[]) => SVGLinearGradientElement;
    marker: (...args: ElArg[]) => SVGMarkerElement;
    mask: (...args: ElArg[]) => SVGMaskElement;
    metadata: (...args: ElArg[]) => SVGMetadataElement;
    path: (...args: ElArg[]) => SVGPathElement;
    pattern: (...args: ElArg[]) => SVGPatternElement;
    polygon: (...args: ElArg[]) => SVGPolygonElement;
    polyline: (...args: ElArg[]) => SVGPolylineElement;
    radialGradient: (...args: ElArg[]) => SVGRadialGradientElement;
    rect: (...args: ElArg[]) => SVGRectElement;
    stop: (...args: ElArg[]) => SVGStopElement;
    svg: (...args: ElArg[]) => SVGSVGElement;
    $switch: (...args: ElArg[]) => SVGSwitchElement;
    symbol: (...args: ElArg[]) => SVGSymbolElement;
    $text: (...args: ElArg[]) => SVGTextElement;
    textPath: (...args: ElArg[]) => SVGTextPathElement;
    tspan: (...args: ElArg[]) => SVGTSpanElement;
    use: (...args: ElArg[]) => SVGUseElement;
    view: (...args: ElArg[]) => SVGViewElement;
    $script: (...args: ElArg[]) => SVGScriptElement;
    $style: (...args: ElArg[]) => SVGStyleElement;
    $title: (...args: ElArg[]) => SVGTitleElement;
};
